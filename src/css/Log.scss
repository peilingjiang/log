@import 'root.scss';

.hyper-log {
  position: relative;

  display: flex;
  flex-direction: column;
  flex-shrink: 0;

  width: fit-content;
  min-height: min-content;
  transform-origin: top;

  overflow: hidden;
  pointer-events: initial;

  &:not(.hyper-shape-log) {
    background: rgba($white, $opacity-high);
  }
  backdrop-filter: blur($blur-high);

  * {
    pointer-events: initial;
  }

  &.log-in-history {
    pointer-events: none;
  }

  &.log-current:not(.here-there-log) {
    outline: $outline-dark;
  }

  &.here-there-log {
    // overflow: hidden !important;
    overflow: visible;

    .hyper-log-body {
      padding: $padding-small !important;
      overflow: hidden !important;
      scrollbar-width: none !important;
      border-radius: $padding-xs;

      outline-width: 1px;
      outline-style: solid;

      &::-webkit-scrollbar {
        height: 0 !important;
        width: 0 !important;
      }
    }
  }

  // &.log-expand {
  //   margin-bottom: $padding-xs !important;
  // }
}

.hyper-log-stream {
  &:not(.stream-expand) {
    .hyper-log-body {
      max-width: $max-log-width;
      max-height: $max-log-unexpanded-stream-height;
      overflow: scroll;

      scrollbar-width: none;

      /* width */
      &::-webkit-scrollbar {
        scrollbar-gutter: stable both-edges;
        position: absolute;
        // width: $scrollbar-width;
        height: $scrollbar-width;
        background: transparent;
      }

      @include scrollbar($scrollbar-width, transparent, $grey, $dark-grey);

      // &:has(.unfolded-inner) {
      //   // width: $max-log-width !important;
      // }
    }
  }
}

:not(.log-expand) {
  .hyper-log-body {
    padding: $padding-small calc($padding-small - $scrollbar-width)
      calc($padding-small - $scrollbar-width) $padding-small;
  }
}

.log-expand {
  .hyper-log-body {
    padding: $padding-small !important;
  }
}

.hyper-log-body {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  // gap: $padding-xs;

  padding: $padding-small;
  overflow-wrap: break-word;

  background: $light;
  // background: rgba($light-grey, $opacity-default);

  // user-select: all;
  // &:focus {
  //   animation: select 100ms step-end forwards;
  // }

  .hyper-log-body-header {
    display: inline-flex;
    gap: $padding-large;
    justify-content: space-between;
    align-items: center;

    width: 100%;

    &.timeline-log-body-header {
      justify-content: flex-end;
    }

    .log-body-timestamp {
      color: $grey;

      display: inline-flex;
      align-items: center;
      justify-content: flex-start;
      gap: $padding-xs;

      svg {
        font-size: $font-size-xs !important;
      }
    }

    .source-location {
      color: $dark-grey;
    }

    .log-body-timestamp,
    .log-body-timestamp *,
    .source-location {
      @include font-fixed;
      font-size: $font-size-small;
      white-space: nowrap;
    }
  }
}

.hyper-log-body-content {
  display: inline-flex;
  align-items: flex-start;
  flex-direction: row;
  gap: $padding-small;

  .hyper-log-center-stage {
    flex-grow: 0;
    flex-shrink: 0;
    font-size: calc($font-size-xs + 2 * $padding-xxs);
    padding: 0;
  }

  .hyper-log-count {
    @include font-fixed;
    color: $white;
    background: rgba($black, $opacity-high);
    font-size: $font-size-xs;
    line-height: 100%;
    white-space: nowrap;
    // width: calc($font-size-small + $padding-xxs * 2);
    padding: $padding-xxs $padding-xs;
    // border-radius: 50%;

    flex-shrink: 0;

    display: flex;
    justify-content: center;
  }

  .hyper-log-unit {
    @include font-fixed;
    // font-size: inherit;
  }
}

/* -------------------------------------------------------------------------- */

.shape-stream {
  &.stream-expand {
    .hyper-shape-log {
      &:hover {
        .shape-timestamp {
          display: flex !important;
        }
      }
    }
  }

  &.stream-vertical {
    .hyper-shape-log {
      align-items: flex-start;
      justify-content: center;
    }
  }

  .hyper-shape-log {
    display: inline-flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;

    pointer-events: initial;

    .shape-log-note {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: $padding-small;

      padding: 0 $padding-xs;

      .shape-log-value {
        cursor: pointer;
        white-space: nowrap;
      }

      span {
        @include font-fixed;

        display: flex;
        align-items: center;
        gap: $padding-xs;

        font-size: $font-size-small;
        color: $light-grey;
      }

      .shape-timestamp {
        display: none;
      }

      .shape-timestamp span {
        font-size: $font-size-small;
      }

      svg {
        font-size: $font-size-xs !important;

        path {
          fill: $light;
        }
      }
    }
  }
}
